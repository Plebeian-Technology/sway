name: "release"
on:
  push:
    branches:
      - tauri

jobs:
  create-release:
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: add PACKAGE_VERSION env var to GITHUB_ENV
        run: echo "PACKAGE_VERSION=$(cat packages/webapp/VERSION.txt)" >> $GITHUB_ENV
      - name: create release
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `app-v${process.env.PACKAGE_VERSION}-${$(date +%s)}`,
              name: `Sway Desktop v${process.env.PACKAGE_VERSION}`,
              body: 'Releases of Sway for Desktop, made with Tauri.',
              draft: true,
              prerelease: false
            })
            return data.id

  build-webapp:
    permissions:
      contents: write
    strategy:
      fail-fast: true
      matrix:
        platform: [macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: add PACKAGE_VERSION env var to GITHUB_ENV
        run: echo "PACKAGE_VERSION=$(cat packages/webapp/VERSION.txt)" >> $GITHUB_ENV
      - name: install node deps with ci-install.sh and npm run build
        run: ./ci-install.sh && npm run build
      - uses: actions/upload-artifact@v3
        with:
          name: build
          path: ./packages/webapp/build

  build-aarch64-apple-darwin:
    needs: [create-release, build-webapp]
    permissions:
      contents: write
    strategy:
      fail-fast: true
      matrix:
        platform: [macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: add PACKAGE_VERSION env var to GITHUB_ENV
        run: echo "PACKAGE_VERSION=$(cat packages/webapp/VERSION.txt)" >> $GITHUB_ENV
      - name: install rust stable from https://github.com/dtolnay/rust-toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: install aarch64-apple-darwin for rust
        run: rustup target add aarch64-apple-darwin
      - name: Download sway webapp build
        id: download-aarch64-apple-darwin
        uses: dawidd6/action-download-artifact@v2
        with:
          name: sway-webapp-build
          path: ./packages/webapp/
      - name: "build sway for m1 macs"
        uses: dcordz/tauri-action@dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ENABLE_CODE_SIGNING: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
        with:
          tagName: app-aarch64-apple-darwin-v${process.env.PACKAGE_VERSION}-${$(date +%s)}
          releaseName: "Sway ARM_64 v${process.env.PACKAGE_VERSION}"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          releaseId: ${{ needs.create-release.outputs.release_id }}
          args: --target aarch64-apple-darwin
          
  build-x86-64-apple-darwin:
    needs: [create-release, build-webapp]
    permissions:
      contents: write
    strategy:
      fail-fast: true
      matrix:
        platform: [macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: add PACKAGE_VERSION env var to GITHUB_ENV
        run: echo "PACKAGE_VERSION=$(cat packages/webapp/VERSION.txt)" >> $GITHUB_ENV
      - name: install rust stable from https://github.com/dtolnay/rust-toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: install x86_64-apple-darwin for rust
        run: rustup target add x86_64-apple-darwin
      - name: Download sway webapp build
        id: download-artifact-x86_64-apple-darwin
        uses: dawidd6/action-download-artifact@v2
        with:
          name: sway-webapp-build
          path: ./packages/webapp/
      - name: "build sway for intel macs"
        uses: dcordz/tauri-action@dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ENABLE_CODE_SIGNING: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
        with:
          tagName: app-x86-64-apple-darwin-v${process.env.PACKAGE_VERSION}-${$(date +%s)}
          releaseName: "Sway x86_64 v${process.env.PACKAGE_VERSION}"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          releaseId: ${{ needs.create-release.outputs.release_id }}
          args: --target x86_64-apple-darwin

  publish-release:
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    needs: [create-release, build-aarch64-apple-darwin, build-x86-64-apple-darwin]
    steps:
      - name: publish release
        id: publish-release
        uses: actions/github-script@v6
        env:
          release_id: ${{ needs.create-release.outputs.release_id }}
        with:
          script: |
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.release_id,
              draft: false,
              prerelease: false
            })
