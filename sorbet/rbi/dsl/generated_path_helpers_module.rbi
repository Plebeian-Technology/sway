# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GeneratedPathHelpersModule`.
# Please instead update this file by running `bin/tapioca dsl GeneratedPathHelpersModule`.

module GeneratedPathHelpersModule
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionDispatch::Routing::PolymorphicRoutes

  sig { params(args: T.untyped).returns(String) }
  def bill_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def bill_score_district_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def bill_score_districts_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def bill_score_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def bill_scores_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def bills_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cancel_user_registration_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_user_session_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def district_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def districts_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_bill_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_bill_score_district_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_bill_score_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_district_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_legislator_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_legislator_vote_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_sway_locale_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_user_district_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_user_invite_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_user_legislator_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_user_legislator_score_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_user_password_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_user_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_user_registration_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_user_vote_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_vote_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def legislator_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def legislator_vote_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def legislator_votes_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def legislators_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_bill_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_bill_score_district_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_bill_score_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_create_challenge_users_passkeys_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_destroy_challenge_users_passkey_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_district_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_legislator_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_legislator_vote_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_rails_conductor_inbound_email_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_rails_conductor_inbound_email_source_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_sway_locale_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_district_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_invite_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_legislator_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_legislator_score_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_password_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_reauthentication_challenge_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_registration_challenge_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_registration_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_session_challenge_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_session_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_vote_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_vote_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def no_auth_passkeys_signup_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_proxy_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_incinerate_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_reroute_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_sources_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_emails_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_direct_uploads_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_disk_service_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_health_check_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_properties_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_routes_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mailers_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mailgun_inbound_emails_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mandrill_inbound_emails_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mandrill_inbound_health_check_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_postmark_inbound_emails_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_relay_inbound_emails_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_representation_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_sendgrid_inbound_emails_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_proxy_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_proxy_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_redirect_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def root_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sign_up_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sway_locale_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sway_locales_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def turbo_recede_historical_location_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def turbo_refresh_historical_location_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def turbo_resume_historical_location_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_rails_disk_service_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_district_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_districts_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_invite_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_invites_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_legislator_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_legislator_score_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_legislator_scores_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_legislators_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_password_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_reauthentication_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_registration_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_session_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_vote_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_votes_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def users_passkey_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def users_passkeys_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def users_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def vote_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def votes_path(*args); end
end
